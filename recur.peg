


start =and_constraint [startingat];
#Basic stuff to do with how constraints are combined
atomic_constraint = nintervalconstraint|weekdayconstraint|monthdayconstraint|betweentimesofdayconstraint|yeardayconstraint|
                    timeofdayconstraint|aftertimeofdayconstraint|
                    ('(' and_constraint ')')|except_constraint;

constraint_list = {atomic_constraint}+;
and_constraint = allof+:constraint_list {['and'] allof+:constraint_list};
except_constraint = 'except' atomic_constraint;

#Data types
integer = /\d+/;
ordinal = 'first'|'second'|'third'|'1st'|'2nd'|'3rd'|'other'|/\d\d?th/;
#If it looks like 02:45, assume 24 hour time.
time = (hour:hour ':' minute:minute [[(':' second:second) [(':' ms:millisecond)]]])|(hour:hour [[(':' minute:minute) [(':' second:second) [(':' ms:millisecond)]]]] ampm:('am'|'pm'));
times = {times:time [',']['and']}+;
hour = /\d\d?/;
minute = /\d\d/;
second = /\d\d/;
millisecond = /\d\d\d\d/;
year = /\d\d\d\d/;
month = 'jan'|'january'|'feb'|'february'|'mar'|'march'|'apr'|'april'|'may'|'jun'|'june'|'jul'|'july'|'aug'|'august'|'sep'|
        'september'| 'nov'| 'november'|'dec'|'december';
dayofmonth = ordinal| /\d\d?/;
date = (month:month dayofmonth:dayofmonth) | (dayofmonth:dayofmonth month:month) | ('the' dayofmonth:dayofmonth 'of' month:month);
dates = {@+:date ','|"and"|/, +and/}+;
datewithyear = (month:month dayofmonth:dayofmonth year:year) | (dayofmonth:dayofmonth month:month year:year);
datetime = (time:time date:date)| (time:time 'on' date:date) | (date:date 'at' time:time);
datetimewithyear = (time:time date:datewithyear)| (time:time 'on' date:datewithyear) | (date:datewithyear 'at' time:time )| date:datewithyear;
timeofdayrange = ('between' time 'and' time)| ('from' time 'to' time)| (time 'to' time);
interval = 'week'|'month'|'year'|'day'|'hour'|'minute'|'second'|'ms'|'millisecond';
intervals = 'weeks'|'months'|'years'|'days'|'hours'|'minutes'|'seconds'|'ms'|'milliseconds';
weekday = 'mon'|'monday'|'tue'|'tuesday'|'wed'|'wednesday'|'thu'|'thursday'|'fri'|'friday'|'sat'|'saturday'|'sun'|'sunday';

#actual constraints
timeofdayconstraint = ['at'] timeofdayconstraint:times;
aftertimeofdayconstraint = 'after' aftertimeofdayconstraint:time;
betweentimesofdayconstraint = ('between' @+:time 'and' @+:time)| ('from' @+:time 'to' @+:time);
nintervalconstraint = ('every' integer intervals) | ('every' ordinal interval);
dateconstraint = (["on"] dates) | ('every year on') date;
datewithyearconstraint = (["on"] datewithyear);
yeardayconstraint = "on the " ordinal "day of the year";
monthdayconstraint = "on the"  @+:ordinal {[','] @+:ordinal} [[',']'and'  @+:ordinal];
weekdayconstraint  = ['every'] @+:weekday {[','] @+:weekday} [[',']'and'  @+:weekday];

#Directives
startingat = ("starting" ['at'|'on'] @:datetimewithyear) |"starting on" weekday:weekday;
